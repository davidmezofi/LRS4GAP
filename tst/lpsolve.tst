gap> START_TEST( "LRS4GAP package: lpsolve.tst" );
gap> SizeScreen( [ 140, 40 ] );;
gap> LoadPackage( "LRS4GAP", false );
true
gap> A := [ [ 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2 ],       [ -1, -1, 0, -1, -2, -1, -1, -1, 0, -1, -1, 0 ],
>            [ 5, 0, 0, 3, -1, -1, 1, 1, 1, -3, 0, -2 ],   [ 5, 0, 0, 3, -1, -1, 1, 1, 1, -3, 0, -2 ],
>            [ -9, 1, -1, 0, 0, 0, 3, 0, 0, -1, -1, 2 ],   [ -9, 1, -1, 0, 0, 0, 3, 0, 0, -1, -1, 2 ],
>            [ 12, 2, -2, 0, 0, 0, 0, 0, 0, 4, 1, -2 ],    [ -11, -1, 0, 1, 2, 1, 1, 1, -2, -3, 0, 0 ],
>            [ 3, -2, 2, 0, 0, 0, 3, 0, 0, 3, 0, 0 ],      [ 10, 0, 0, -7, 0, 1, -2, 1, 0, 2, -1, -1 ],
>            [ 10, 0, 0, -7, 0, 1, -2, 1, 0, 2, -1, -1 ],  [ -10, 0, 0, 3, -1, -1, -2, 1, -1, 6, 0, 2 ],
>            [ -10, 0, 0, 3, -1, -1, -2, 1, -1, 6, 0, 2 ], [ 35, 0, 0, 6, -2, 2, 3, 0, -2, 3, 0, 0 ],
>            [ -5, 0, 0, -3, 1, 1, -1, -1, 0, 3, 0, 0 ],   [ -5, 0, 0, -3, 1, 1, -1, -1, 0, 3, 0, 0 ],
>            [ -15, 0, 0, 8, 2, 0, -3, 0, 0, -7, -1, 0 ],  [ 11, 1, 2, 7, 0, -1, -1, -1, 0, 3, 0, 0 ],
>            [ 24, -1, -2, 8, 2, 0, 0, 0, 2, 8, -1, 0 ],   [ -19, 1, 0, 6, -2, 2, -3, 0, 0, -3, 0, 0 ],
>            [ 16, 1, 0, -6, 2, -2, 0, 0, -2, 0, 0, 0 ],   [ 0, 0, 0, -8, -2, 0, 0, 0, 2, 0, 0, 2 ],
>            [ 9, -1, 0, 0, 0, 0, -3, 0, 0, 1, 1, 0 ],     [ 24, -1, -2, 0, 0, 0, 0, 0, 0, -8, 1, 2 ],
>            [ 36, 1, 2, 0, 0, 0, 0, 0, 0, -4, -1, 0 ],    [ -45, 0, 0, 0, 0, 0, 3, 0, 0, 3, 0, -2 ] ];;
gap> rhs := [ -1, -23, -45, -45, -231, -231, -252, -253, -483, -770, -770, -990,
>          -990, -1035, -1035, -1035, -1265, -1771, -2024, -2277, -3312, -3520,
>          -5313, -5544, -5796, -10395 ];;
gap> obj := [ 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2 ];;
gap> sol_lrs := LRS_LPSolveMax( A, rhs, obj );;
gap> sol_glpk := GLPK_LPSolveMax( A, rhs, obj );;
gap> ForAll( A * sol_lrs[1] - rhs, x -> x >= 0 );
true
gap> ForAll( A * sol_glpk[1] - rhs, x -> x >= 0 );
true
gap> STOP_TEST( "lpsolve.tst", 10000 );
LRS4GAP package: lpsolve.tst
msecs: 12
